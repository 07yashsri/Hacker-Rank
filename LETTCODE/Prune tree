#include <iostream>
using namespace std;

struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;

    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};


TreeNode* pruneTree(TreeNode* root) {
    if (root == nullptr) return nullptr;

    // Recursively prune left and right subtrees
    root->left = pruneTree(root->left);
    root->right = pruneTree(root->right);

   
    if (root->val == 0 && root->left == nullptr && root->right == nullptr) {
        return nullptr;
    }

    return root;
}


void inorder(TreeNode* root) {
    if (!root) return;
    inorder(root->left);
    cout << root->val << " ";
    inorder(root->right);
}


int main() {
    // Building the tree: [1,null,0,0,1]
    TreeNode* root = new TreeNode(1);
    root->right = new TreeNode(0);
    root->right->left = new TreeNode(0);
    root->right->right = new TreeNode(1);

    root = pruneTree(root);

    cout << "Inorder after pruning: ";
    inorder(root);
    cout << endl;

    return 0;
}
