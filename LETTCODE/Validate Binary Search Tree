#include <iostream>
#include <climits>
using namespace std;


struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;

    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};


bool isValidBST(TreeNode* root, long long lower = LONG_MIN, long long upper = LONG_MAX) {
    if (!root) return true;  

 
    if (root->val <= lower || root->val >= upper) {
        return false;
    }

 
    return isValidBST(root->left, lower, root->val) && isValidBST(root->right, root->val, upper);
}

int main() {
    /*
        Tree: [2, 1, 3]
              2
             / \
            1   3

        Expected output: true (this is a valid BST)
    */

    TreeNode* root = new TreeNode(2);
    root->left = new TreeNode(1);
    root->right = new TreeNode(3);

    bool result = isValidBST(root);
    cout << "Is the binary tree a valid BST? " << (result ? "Yes" : "No") << endl;

    return 0;
}
